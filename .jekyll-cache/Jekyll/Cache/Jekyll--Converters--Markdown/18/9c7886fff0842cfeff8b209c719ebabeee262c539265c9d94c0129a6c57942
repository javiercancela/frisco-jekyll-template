I":<p>He tenido tiempo de echarle un vistazo por encima a la <a href="http://www.forum.nokia.com/info/sw.nokia.com/id/4284ae69-d37a-4319-bdf0-d4acdab39700/Sensor_plugin_S60_3rd_ed.html" title="Sensor Plug-in for 60 3rd Edition SDK for Symbian OS, for C++">Sensor API</a> de los dispositivos Nokia. Tambi√©n a su equivalente para Java ME, <a href="http://jcp.org/en/jsr/detail?id=256" title="Mobile Sensor API"><em>JSR 256: Mobile Sensor API</em></a><em>.</em></p>

<p>Ambas APIs funcionan de manera similar: ofrecen m√©todos para interrogar al dispositivo sobre los sensores que posee, y una vez elegido alguno lo interrogan peri√≥dicamente para obtener los valores medidos. Estos valores medidos pueden ser muchas cosas; la API de Java define una serie de nombres est√°ndar para la cantidad medida, que nos pueden dar una idea del tipo de dispositivos para los que est√° pensada:</p>

<blockquote>
  <pre>absorbed_dose, absorbed_dose_rate, acceleration, activity, alcohol,
 altitude, amount_of_substance, amount_of_substance_concentration,
 angle, angular_acceleration, angular_velocity, area, battery_charge,
 blood_glucose_level, blood_oxygen_level, blood_pressure,
 body_fat_percentage, capacitance, catalytic_activity,
 catalytic_concentration, character, current_density, direction,
 direction_of_motion, dose_equivalent, duration, dynamic_viscosity,
 electric_charge, electric_charge_density, electric_conductance,
 electric_currency, electric_current, electric_field_strength,
 electric_flux_density, electric_potential_difference, electric_resistance,
 energy, energy_density, entropy, exposure, fingerprint, flip_state,
 force,  frequency, gesture, heart_rate, heat_capacity,
 heat_flux_density, humidity, illuminance, inductance, irradiance,
 kerma, length, location, luminance, luminous_flux, luminous_intensity,
 magnetic_field_strength, magnetic_flux, magnetic_flux_density, mass,
 mass_density, molar_energy, molar_entropy, molar_heat_capacity,
 moment_of_force, percentage, permeability, permittivity, plane_angle,
 power, pressure, proximity, quantity_of_heat, radiance, radiant_flux,
 radiant_intensity, RR_interval, solid_angle, sound_intensity, specific_energy,
 specific_entropy, specific_heat_capacity, specific_volume,
 step_count, stress, surface_tension, temperature,
 thermal_conductivity, time, wave_number, velocimeter, velocity,
 wind_speed, volume, work</pre>
</blockquote>

<p>La API de Nokia parece m√°s restrictiva, dise√±ada para medir cosas en t√©rminos de las tres dimensiones espaciales. De hecho en la p√°gina s√≥lo se habla de un aceler√≥metro. Sin embargo, me da la impresi√≥n de que es posible obtener diversos par√°metros del aceler√≥metro. Al menos, adem√°s de la aceleraci√≥n, puedes obtener √°ngulos de inclinaci√≥n (que el aceler√≥metro puede proporcionar calculando la distribuci√≥n de las componentes de la gravedad) como si fuese un gir√≥scopo. En cualquier caso, esta API ya ha dado pie al desarrollo de aplicaciones tan fundamentales como <a href="http://www.symbian-guru.com/welcome/2007/11/lightsaber-v13.html" title="Lightsaber V1.3 for N95 - Improved Again">la aplicaci√≥n de moda para el N95</a>.</p>

<p>Y para que veamos que no s√≥lo el iPhone y el N95 tienen aceler√≥metro, aqu√≠ hay un ejemplo de <a href="http://developer.sonyericsson.com/site/global/techsupport/tipstrickscode/java/p_jsr256sensorapi_jp8_w910.jsp" title="Using the Sensor API with the accelerometer for W910 in Java ME">c√≥mo usar la API de Java con el aceler√≥metro del Sony Ericsson W910</a>.</p>

<p>###Entradas relacionadas:</p>

<p><a href="/2007/11/02/el-acelerometro-del-n95/">El aceler√≥metro del N95</a></p>
:ET