I"<p><strong><em>Intents</em></strong></p>

<p>Si las <em>Activities</em> son básicamente pantallas, las “intenciones” o <a href="http://code.google.com/android/reference/android/content/Intent.html" title="Intent"><em>Intents</em></a> son la manera de invocar estas <em>Activities</em>. La definición breve de la documentación es: “Un intent es la descripción abstracta de una operación que se va a llevar a cabo”. O dicho de otro modo, un <em>Intent</em> es una clase que permite especificar una <em>Activity</em> a ejecutar, llamando a uno de los métodos de la clase <em>Activity</em> con ese <em>Intent</em> de parámetro. Parece fácil, pero he de confesar que en la documentación de Android el asunto me pareció un poco confuso, sobre todo por la cantidad de información que puede ir asociada a estas clases.</p>

<p><strong>Dos formas de llamar a una <em>Activity</em></strong></p>

<p>Explicitamente o implicitamente. La forma explícita es simple de entender: creamos un Intent indicando el nombre de la clase correspondiente a la actividad y el paquete, llamamos a startActivity (o startSubActivity si queremos que nos notifiquen cuándo finaliza dicha actividad) y listo. El sistema busca la clase y crea la instancia, pasándo los datos que podamos haber añadido al <em>Intent</em> en el objeto <em>Bundle</em> del método <em>onCreate</em> de la nueva instancia.</p>

<blockquote>
  <p><code class="language-plaintext highlighter-rouge">// ClaseActividad1 es la clase de la actividad</code></p>
</blockquote>

<blockquote>
  <p>//<code class="language-plaintext highlighter-rouge">que queremos iniciar. El parámetro this indica</code></p>
</blockquote>

<blockquote>
  <p>//<code class="language-plaintext highlighter-rouge">el Context actual, para saber en qué</code></p>
</blockquote>

<blockquote>
  <p>// <code class="language-plaintext highlighter-rouge">package buscar esta clase&lt;br /&gt;
Intent i = new Intent(this, ClaseActividad1.class);&lt;br /&gt;
// Esta información se recuperará en el objeto Bundle de onCreate&lt;br /&gt;
i.putExtra("NombreParametro", valorParametro);&lt;br /&gt;
startActivity(i);</code></p>
</blockquote>

<p>La invocación implícita de una actividad se realiza también a través de la clase <em>Intent</em>. Es implícita porque no se indica el nombre de la clase correspondiente a la actividad a invocar, sino que se establecen una serie de criterios, y se deja que el sistema elija una actividad que cumpla esos criterios.</p>

<p><strong>Intenciones y criterios</strong></p>

<p>A un <em>Intent</em> podemos asociarle una acción, unos datos y una categoría. Y aquí está el verdadero <em>quid</em> de esta clase.  Las actividades pueden declarar el tipo de acciones que pueden llevar a cabo y los tipos de datos que pueden gestionar. Las acciones son cadenas de texto estándar que describen lo que que la actividad puede hacer. Por ejemplo, <span>android.intent.action.VIEW es una acción que indica que la actividad puede mostrar datos al usuario. Esta acción viene predefinida en la clase Intent, pero es posible definir nuevas acciones para nuestras actividades. La misma actividad puede declarar que el tipo de datos del que se ocupa es, por ejemplo, </span>“vnd.android.cursor.dir/person”. También puede declarar una categoría, que básicamente indica si la actividad va a ser lanzada desde el lanzador de aplicaciones, desde el menú de otra aplicación o directamente desde otra actividad. En el AndroidManifest.xml quedaría algo así:</p>

<blockquote>
  <p>`<intent-filter><br /></intent-filter></p>
</blockquote>
<action android:name="&lt;span&gt;android.intent.action.VIEW&lt;/span&gt;" />
<p><br /></p>
<category android:name="android.intent.category.DEFAULT" />
<p><br /></p>
<data android:mimeType="vnd.android.cursor.dir/person" />
<p><br />
&lt;/intent-filter&gt;`</p>

<p>Así, para llamar implícitamente a una actividad a través de un <em>intent</em>, en vez de asignar el nombre de la clase le asignamos una de las acciones que esta puede llevar a cabo, con el tipo de datos adecuado. Las reglas exactas se indican en la documentación de la clase <a href="http://code.google.com/android/reference/android/content/IntentFilter.html" title="IntentFilter">IntentFilter</a>.</p>

<p><strong>Conclusiones</strong></p>

<p><em>Activities</em> e <em>Intents</em> son los dos ejes sobre los que gira la arquitectura de las aplicaciones Android. Existen muchos más conceptos importantes, por supuesto, pero a partir de aquí lo mejor es verlo funcionando todo en una aplicación ejemplo. Pero eso será en la próxima entrada.</p>

<h3 id="entradas-relacionadas">Entradas relacionadas:</h3>

<p><a href="/2008/05/06/programando-en-android-prologo/">Programando en Android – Prólogo</a></p>

<p><a href="/2008/05/12/programando-en-android-conceptos-iniciales-i/">Programando en Android – Conceptos iniciales (I)</a></p>

<p><a href="/2008/05/26/programando-en-android-notepad-i/">Programando en Android – NotePad (I)</a></p>

<p><a href="/2008/06/02/programando-en-android-notepad-ii/">Programando en Android – NotePad (II)</a></p>
:ET